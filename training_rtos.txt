Training RTOS (Real Time Operating System) with ESP32S

FreeRTOS API : www.freertos.org/a00106.html

introduction: 
Blinky.ino
>   create 3 task utk blink led dgn delay berbeda-beda
>   perlu rangkai 3 led utk melihat task bekerja 
    scr preemptive
>   operator ^ utk XOR -> digunakan utk toggle
>   for(;;) -> sama dgn while(1)
>   ? maksud dari stack high water mark

task: 
Task1.ino 
>   create 2 task : serial print * + serial print char dlam list
>   ubah baud rate jadi 300 agar serial print lebih lambat
>   task dapat disuspend dan resume tergantung kebutuhan
>   setelah task di delete, maka task tidak akan dieksekusi
    lagi
>   ? perbedaan eksekusi task dgn prioritas yg berbeda

Task2.ino 
>   create 2 task : blink led + readserial delay utk blink led
>   menggunakan global variabel utk sync variabel delay antar 2 task
>   led built in utk ESP-WROOM-32 [board WEMOS-LOLIN-32] ada di gpio 2
>   task default [setup() + loop()] dihabus dgn vTaskDelete(NULL)
    setelah setup() selesai


Memory1.ino 
>   ? pvPortMalloc sudah penuh, cara vPortFree() utk free heap memory

Memory2.ino 
>   terlihat free heap berkurang saat pointer message mendapat characters
>   fungsi vPortFree utk free heap 
>   menggunakan global var utk synchron antar task (flag msg_flag)
>   ? configASSERT 
>   ? alokasi memori menggunakan pvPortMalloc

Queue1.ino 
>   task default: send queue tiap 1 detik
>   task 1: serial print receive queue tiap 500ms
>   QueueHandle utk sync data berupa antrian antar task

Queue2.ino 
>   define LED_BUILTIN 12
>   create 2 task: 
    task CLI: receive queue msg,
        read Serial ,
        print Serial,
        send queue delay,

    blink LED: receive queue msg, 
        send queue msg.count,
        blink LED default 500ms, 
        send queue jika counter mencapai 100

Queue3.ino 
>   Queue1 + display (modif pakai lcd16x2 - LiquidCrystal.h)
>   cek jika send queue lebih cepat dibanding receive queue:
    saat queue belum receive tapi sudah send queue lagi, maka send queue
    gagal karna queue penuh (serial print akan bergantian angka
    dan queue full)

mvc.ino 
>   create 3 task:
    Model (process) : receive queue, mengolah data temp (membagi 3 kondisi temp),send queue ke task display 
    Visual (display/output) : receive queue, berupa blink led dgn 3 variasi delay dgn masing2 kondisi temp 
    Controller (input) : ambil data dari serial read, send queue ke task process

timer1.ino
>   create 2 timer software menggunakan 1 fungsi callback (dibedakan berdasarkan timer id)
>   saat create dapat memilih utk auto reload atau tidak
>   setelah timer dicreate, timer perlu di start

timer 2.ino
>   create 1 task: read serial , jika serial available , echo serial, start timer dan nyalakan led 
>   create 1 timer: matikan LED 

binary.ino 
>   binary semaphore sprti token, utk mendapat akses resource perlu mengambil token tsb
>   create blink task: give token dan eksekusi blink 
>   task setup: sequantial -> tunggu read serial available, create semaphore, create blink task,
    kemudian semaphore take (blocking hingga mendapat binary semaphore)
>   ? task loop: maksudnya allow yielding

counting.ino 
>   masuk ke task all done di tengah2 karna setelah task ke 5 selesai give semaphore,
    bloking take semaphore di task default selesai dan eksekusi print task all done
>   ketika diganti dgn semaphore binary, setelah create beberapa task, kemudian lgsg 
    give beberapa semaphore shg binary semaphore habis (karna harus satu)
